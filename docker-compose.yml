version: "3.4"
services:
  paralink_node:
    build:
      context: .
      dockerfile: Dockerfile
    image: paralink_node
    env_file:
      - .env
    environment:
      DATABASE_HOST: psql
      IPFS_API_SERVER_ADDRESS: /dns/ipfs/tcp/5001/http
    command: /wait-for-it.sh -t 0 rabbitmq:5672 -- ./paralink-node node start --host 0.0.0.0
    volumes:
      - ${HOME_MOUNT_DIR}/.paralink:/root/.paralink
    ports:
      - 7424:7424
    tty: true
    stdin_open: true
    depends_on:
      - psql
      - ipfs
      - rabbitmq
    networks:
      - backend
      - frontend
    restart: on-failure

  celery_worker:
    image: paralink_node
    env_file:
      - .env
    command: pipenv run celery -A src.process.processor worker -l DEBUG -Q collect,execute
    depends_on:
      - psql
      - ipfs
      - rabbitmq
      - paralink_node
    networks:
      - backend
    restart: on-failure

  rabbitmq:
    image: rabbitmq:latest
    networks:
      - backend
    restart: on-failure

  psql:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - psql_paralink_data:/var/lib/postgresql/data
    networks:
      - backend
    restart: on-failure

  ipfs:
    image: ipfs/go-ipfs:v0.7.0
    volumes:
      - ${HOME_MOUNT_DIR}/.paralink/ipfs/export:/export
      - ${HOME_MOUNT_DIR}/.paralink/ipfs/data:/data/ipfs
    networks:
      - backend
    restart: on-failure

volumes:
  psql_paralink_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
